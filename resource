[1mdiff --git a/.gitattributes b/.gitattributes[m
[1mindex c521ca2..412eeda 100644[m
[1m--- a/.gitattributes[m
[1m+++ b/.gitattributes[m
[36m@@ -1,22 +1,22 @@[m
[31m-# Auto detect text files and perform LF normalization[m
[31m-* text=auto[m
[31m-[m
[31m-# Custom for Visual Studio[m
[31m-*.cs     diff=csharp[m
[31m-*.sln    merge=union[m
[31m-*.csproj merge=union[m
[31m-*.vbproj merge=union[m
[31m-*.fsproj merge=union[m
[31m-*.dbproj merge=union[m
[31m-[m
[31m-# Standard to msysgit[m
[31m-*.doc	 diff=astextplain[m
[31m-*.DOC	 diff=astextplain[m
[31m-*.docx diff=astextplain[m
[31m-*.DOCX diff=astextplain[m
[31m-*.dot  diff=astextplain[m
[31m-*.DOT  diff=astextplain[m
[31m-*.pdf  diff=astextplain[m
[31m-*.PDF	 diff=astextplain[m
[31m-*.rtf	 diff=astextplain[m
[31m-*.RTF	 diff=astextplain[m
[32m+[m[32m# Auto detect text files and perform LF normalization[m
[32m+[m[32m* text=auto[m
[32m+[m
[32m+[m[32m# Custom for Visual Studio[m
[32m+[m[32m*.cs     diff=csharp[m
[32m+[m[32m*.sln    merge=union[m
[32m+[m[32m*.csproj merge=union[m
[32m+[m[32m*.vbproj merge=union[m
[32m+[m[32m*.fsproj merge=union[m
[32m+[m[32m*.dbproj merge=union[m
[32m+[m
[32m+[m[32m# Standard to msysgit[m
[32m+[m[32m*.doc	 diff=astextplain[m
[32m+[m[32m*.DOC	 diff=astextplain[m
[32m+[m[32m*.docx diff=astextplain[m
[32m+[m[32m*.DOCX diff=astextplain[m
[32m+[m[32m*.dot  diff=astextplain[m
[32m+[m[32m*.DOT  diff=astextplain[m
[32m+[m[32m*.pdf  diff=astextplain[m
[32m+[m[32m*.PDF	 diff=astextplain[m
[32m+[m[32m*.rtf	 diff=astextplain[m
[32m+[m[32m*.RTF	 diff=astextplain[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 416f670..b9d6bd9 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,215 +1,215 @@[m
[31m-#################[m
[31m-## Eclipse[m
[31m-#################[m
[31m-[m
[31m-*.pydevproject[m
[31m-.project[m
[31m-.metadata[m
[31m-bin/[m
[31m-tmp/[m
[31m-*.tmp[m
[31m-*.bak[m
[31m-*.swp[m
[31m-*~.nib[m
[31m-local.properties[m
[31m-.classpath[m
[31m-.settings/[m
[31m-.loadpath[m
[31m-[m
[31m-# External tool builders[m
[31m-.externalToolBuilders/[m
[31m-[m
[31m-# Locally stored "Eclipse launch configurations"[m
[31m-*.launch[m
[31m-[m
[31m-# CDT-specific[m
[31m-.cproject[m
[31m-[m
[31m-# PDT-specific[m
[31m-.buildpath[m
[31m-[m
[31m-[m
[31m-#################[m
[31m-## Visual Studio[m
[31m-#################[m
[31m-[m
[31m-## Ignore Visual Studio temporary files, build results, and[m
[31m-## files generated by popular Visual Studio add-ons.[m
[31m-[m
[31m-# User-specific files[m
[31m-*.suo[m
[31m-*.user[m
[31m-*.sln.docstates[m
[31m-[m
[31m-# Build results[m
[31m-[m
[31m-[Dd]ebug/[m
[31m-[Rr]elease/[m
[31m-x64/[m
[31m-build/[m
[31m-[Bb]in/[m
[31m-[Oo]bj/[m
[31m-[m
[31m-# MSTest test Results[m
[31m-[Tt]est[Rr]esult*/[m
[31m-[Bb]uild[Ll]og.*[m
[31m-[m
[31m-*_i.c[m
[31m-*_p.c[m
[31m-*.ilk[m
[31m-*.meta[m
[31m-*.obj[m
[31m-*.pch[m
[31m-*.pdb[m
[31m-*.pgc[m
[31m-*.pgd[m
[31m-*.rsp[m
[31m-*.sbr[m
[31m-*.tlb[m
[31m-*.tli[m
[31m-*.tlh[m
[31m-*.tmp[m
[31m-*.tmp_proj[m
[31m-*.log[m
[31m-*.vspscc[m
[31m-*.vssscc[m
[31m-.builds[m
[31m-*.pidb[m
[31m-*.log[m
[31m-*.scc[m
[31m-[m
[31m-# Visual C++ cache files[m
[31m-ipch/[m
[31m-*.aps[m
[31m-*.ncb[m
[31m-*.opensdf[m
[31m-*.sdf[m
[31m-*.cachefile[m
[31m-[m
[31m-# Visual Studio profiler[m
[31m-*.psess[m
[31m-*.vsp[m
[31m-*.vspx[m
[31m-[m
[31m-# Guidance Automation Toolkit[m
[31m-*.gpState[m
[31m-[m
[31m-# ReSharper is a .NET coding add-in[m
[31m-_ReSharper*/[m
[31m-*.[Rr]e[Ss]harper[m
[31m-[m
[31m-# TeamCity is a build add-in[m
[31m-_TeamCity*[m
[31m-[m
[31m-# DotCover is a Code Coverage Tool[m
[31m-*.dotCover[m
[31m-[m
[31m-# NCrunch[m
[31m-*.ncrunch*[m
[31m-.*crunch*.local.xml[m
[31m-[m
[31m-# Installshield output folder[m
[31m-[Ee]xpress/[m
[31m-[m
[31m-# DocProject is a documentation generator add-in[m
[31m-DocProject/buildhelp/[m
[31m-DocProject/Help/*.HxT[m
[31m-DocProject/Help/*.HxC[m
[31m-DocProject/Help/*.hhc[m
[31m-DocProject/Help/*.hhk[m
[31m-DocProject/Help/*.hhp[m
[31m-DocProject/Help/Html2[m
[31m-DocProject/Help/html[m
[31m-[m
[31m-# Click-Once directory[m
[31m-publish/[m
[31m-[m
[31m-# Publish Web Output[m
[31m-*.Publish.xml[m
[31m-*.pubxml[m
[31m-[m
[31m-# NuGet Packages Directory[m
[31m-## TODO: If you have NuGet Package Restore enabled, uncomment the next line[m
[31m-#packages/[m
[31m-[m
[31m-# Windows Azure Build Output[m
[31m-csx[m
[31m-*.build.csdef[m
[31m-[m
[31m-# Windows Store app package directory[m
[31m-AppPackages/[m
[31m-[m
[31m-# Others[m
[31m-sql/[m
[31m-*.Cache[m
[31m-ClientBin/[m
[31m-[Ss]tyle[Cc]op.*[m
[31m-~$*[m
[31m-*~[m
[31m-*.dbmdl[m
[31m-*.[Pp]ublish.xml[m
[31m-*.pfx[m
[31m-*.publishsettings[m
[31m-[m
[31m-# RIA/Silverlight projects[m
[31m-Generated_Code/[m
[31m-[m
[31m-# Backup & report files from converting an old project file to a newer[m
[31m-# Visual Studio version. Backup files are not needed, because we have git ;-)[m
[31m-_UpgradeReport_Files/[m
[31m-Backup*/[m
[31m-UpgradeLog*.XML[m
[31m-UpgradeLog*.htm[m
[31m-[m
[31m-# SQL Server files[m
[31m-App_Data/*.mdf[m
[31m-App_Data/*.ldf[m
[31m-[m
[31m-#############[m
[31m-## Windows detritus[m
[31m-#############[m
[31m-[m
[31m-# Windows image file caches[m
[31m-Thumbs.db[m
[31m-ehthumbs.db[m
[31m-[m
[31m-# Folder config file[m
[31m-Desktop.ini[m
[31m-[m
[31m-# Recycle Bin used on file shares[m
[31m-$RECYCLE.BIN/[m
[31m-[m
[31m-# Mac crap[m
[31m-.DS_Store[m
[31m-[m
[31m-[m
[31m-#############[m
[31m-## Python[m
[31m-#############[m
[31m-[m
[31m-*.py[co][m
[31m-[m
[31m-# Packages[m
[31m-*.egg[m
[31m-*.egg-info[m
[31m-dist/[m
[31m-build/[m
[31m-eggs/[m
[31m-parts/[m
[31m-var/[m
[31m-sdist/[m
[31m-develop-eggs/[m
[31m-.installed.cfg[m
[31m-[m
[31m-# Installer logs[m
[31m-pip-log.txt[m
[31m-[m
[31m-# Unit test / coverage reports[m
[31m-.coverage[m
[31m-.tox[m
[31m-[m
[31m-#Translations[m
[31m-*.mo[m
[31m-[m
[31m-#Mr Developer[m
[31m-.mr.developer.cfg[m
[32m+[m[32m#################[m
[32m+[m[32m## Eclipse[m
[32m+[m[32m#################[m
[32m+[m
[32m+[m[32m*.pydevproject[m
[32m+[m[32m.project[m
[32m+[m[32m.metadata[m
[32m+[m[32mbin/[m
[32m+[m[32mtmp/[m
[32m+[m[32m*.tmp[m
[32m+[m[32m*.bak[m
[32m+[m[32m*.swp[m
[32m+[m[32m*~.nib[m
[32m+[m[32mlocal.properties[m
[32m+[m[32m.classpath[m
[32m+[m[32m.settings/[m
[32m+[m[32m.loadpath[m
[32m+[m
[32m+[m[32m# External tool builders[m
[32m+[m[32m.externalToolBuilders/[m
[32m+[m
[32m+[m[32m# Locally stored "Eclipse launch configurations"[m
[32m+[m[32m*.launch[m
[32m+[m
[32m+[m[32m# CDT-specific[m
[32m+[m[32m.cproject[m
[32m+[m
[32m+[m[32m# PDT-specific[m
[32m+[m[32m.buildpath[m
[32m+[m
[32m+[m
[32m+[m[32m#################[m
[32m+[m[32m## Visual Studio[m
[32m+[m[32m#################[m
[32m+[m
[32m+[m[32m## Ignore Visual Studio temporary files, build results, and[m
[32m+[m[32m## files generated by popular Visual Studio add-ons.[m
[32m+[m
[32m+[m[32m# User-specific files[m
[32m+[m[32m*.suo[m
[32m+[m[32m*.user[m
[32m+[m[32m*.sln.docstates[m
[32m+[m
[32m+[m[32m# Build results[m
[32m+[m
[32m+[m[32m[Dd]ebug/[m
[32m+[m[32m[Rr]elease/[m
[32m+[m[32mx64/[m
[32m+[m[32mbuild/[m
[32m+[m[32m[Bb]in/[m
[32m+[m[32m[Oo]bj/[m
[32m+[m
[32m+[m[32m# MSTest test Results[m
[32m+[m[32m[Tt]est[Rr]esult*/[m
[32m+[m[32m[Bb]uild[Ll]og.*[m
[32m+[m
[32m+[m[32m*_i.c[m
[32m+[m[32m*_p.c[m
[32m+[m[32m*.ilk[m
[32m+[m[32m*.meta[m
[32m+[m[32m*.obj[m
[32m+[m[32m*.pch[m
[32m+[m[32m*.pdb[m
[32m+[m[32m*.pgc[m
[32m+[m[32m*.pgd[m
[32m+[m[32m*.rsp[m
[32m+[m[32m*.sbr[m
[32m+[m[32m*.tlb[m
[32m+[m[32m*.tli[m
[32m+[m[32m*.tlh[m
[32m+[m[32m*.tmp[m
[32m+[m[32m*.tmp_proj[m
[32m+[m[32m*.log[m
[32m+[m[32m*.vspscc[m
[32m+[m[32m*.vssscc[m
[32m+[m[32m.builds[m
[32m+[m[32m*.pidb[m
[32m+[m[32m*.log[m
[32m+[m[32m*.scc[m
[32m+[m
[32m+[m[32m# Visual C++ cache files[m
[32m+[m[32mipch/[m
[32m+[m[32m*.aps[m
[32m+[m[32m*.ncb[m
[32m+[m[32m*.opensdf[m
[32m+[m[32m*.sdf[m
[32m+[m[32m*.cachefile[m
[32m+[m
[32m+[m[32m# Visual Studio profiler[m
[32m+[m[32m*.psess[m
[32m+[m[32m*.vsp[m
[32m+[m[32m*.vspx[m
[32m+[m
[32m+[m[32m# Guidance Automation Toolkit[m
[32m+[m[32m*.gpState[m
[32m+[m
[32m+[m[32m# ReSharper is a .NET coding add-in[m
[32m+[m[32m_ReSharper*/[m
[32m+[m[32m*.[Rr]e[Ss]harper[m
[32m+[m
[32m+[m[32m# TeamCity is a build add-in[m
[32m+[m[32m_TeamCity*[m
[32m+[m
[32m+[m[32m# DotCover is a Code Coverage Tool[m
[32m+[m[32m*.dotCover[m
[32m+[m
[32m+[m[32m# NCrunch[m
[32m+[m[32m*.ncrunch*[m
[32m+[m[32m.*crunch*.local.xml[m
[32m+[m
[32m+[m[32m# Installshield output folder[m
[32m+[m[32m[Ee]xpress/[m
[32m+[m
[32m+[m[32m# DocProject is a documentation generator add-in[m
[32m+[m[32mDocProject/buildhelp/[m
[32m+[m[32mDocProject/Help/*.HxT[m
[32m+[m[32mDocProject/Help/*.HxC[m
[32m+[m[32mDocProject/Help/*.hhc[m
[32m+[m[32mDocProject/Help/*.hhk[m
[32m+[m[32mDocProject/Help/*.hhp[m
[32m+[m[32mDocProject/Help/Html2[m
[32m+[m[32mDocProject/Help/html[m
[32m+[m
[32m+[m[32m# Click-Once directory[m
[32m+[m[32mpublish/[m
[32m+[m
[32m+[m[32m# Publish Web Output[m
[32m+[m[32m*.Publish.xml[m
[32m+[m[32m*.pubxml[m
[32m+[m
[32m+[m[32m# NuGet Packages Directory[m
[32m+[m[32m## TODO: If you have NuGet Package Restore enabled, uncomment the next line[m
[32m+[m[32m#packages/[m
[32m+[m
[32m+[m[32m# Windows Azure Build Output[m
[32m+[m[32mcsx[m
[32m+[m[32m*.build.csdef[m
[32m+[m
[32m+[m[32m# Windows Store app package directory[m
[32m+[m[32mAppPackages/[m
[32m+[m
[32m+[m[32m# Others[m
[32m+[m[32msql/[m
[32m+[m[32m*.Cache[m
[32m+[m[32mClientBin/[m
[32m+[m[32m[Ss]tyle[Cc]op.*[m
[32m+[m[32m~$*[m
[32m+[m[32m*~[m
[32m+[m[32m*.dbmdl[m
[32m+[m[32m*.[Pp]ublish.xml[m
[32m+[m[32m*.pfx[m
[32m+[m[32m*.publishsettings[m
[32m+[m
[32m+[m[32m# RIA/Silverlight projects[m
[32m+[m[32mGenerated_Code/[m
[32m+[m
[32m+[m[32m# Backup & report files from converting an old project file to a newer[m
[32m+[m[32m# Visual Studio version. Backup files are not needed, because we have git ;-)[m
[32m+[m[32m_UpgradeReport_Files/[m
[32m+[m[32mBackup*/[m
[32m+[m[32mUpgradeLog*.XML[m
[32m+[m[32mUpgradeLog*.htm[m
[32m+[m
[32m+[m[32m# SQL Server files[m
[32m+[m[32mApp_Data/*.mdf[m
[32m+[m[32mApp_Data/*.ldf[m
[32m+[m
[32m+[m[32m#############[m
[32m+[m[32m## Windows detritus[m
[32m+[m[32m#############[m
[32m+[m
[32m+[m[32m# Windows image file caches[m
[32m+[m[32mThumbs.db[m
[32m+[m[32mehthumbs.db[m
[32m+[m
[32m+[m[32m# Folder config file[m
[32m+[m[32mDesktop.ini[m
[32m+[m
[32m+[m[32m# Recycle Bin used on file shares[m
[32m+[m[32m$RECYCLE.BIN/[m
[32m+[m
[32m+[m[32m# Mac crap[m
[32m+[m[32m.DS_Store[m
[32m+[m
[32m+[m
[32m+[m[32m#############[m
[32m+[m[32m## Python[m
[32m+[m[32m#############[m
[32m+[m
[32m+[m[32m*.py[co][m
[32m+[m
[32m+[m[32m# Packages[m
[32m+[m[32m*.egg[m
[32m+[m[32m*.egg-info[m
[32m+[m[32mdist/[m
[32m+[m[32mbuild/[m
[32m+[m[32meggs/[m
[32m+[m[32mparts/[m
[32m+[m[32mvar/[m
[32m+[m[32msdist/[m
[32m+[m[32mdevelop-eggs/[m
[32m+[m[32m.installed.cfg[m
[32m+[m
[32m+[m[32m# Installer logs[m
[32m+[m[32mpip-log.txt[m
[32m+[m
[32m+[m[32m# Unit test / coverage reports[m
[32m+[m[32m.coverage[m
[32m+[m[32m.tox[m
[32m+[m
[32m+[m[32m#Translations[m
[32m+[m[32m*.mo[m
[32m+[m
[32m+[m[32m#Mr Developer[m
[32m+[m[32m.mr.developer.cfg[m
[1mdiff --git a/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/GBC.java b/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/GBC.java[m
[1mindex 2560d0b..401c174 100644[m
[1m--- a/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/GBC.java[m
[1m+++ b/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/GBC.java[m
[36m@@ -1,186 +1,186 @@[m
[31m-package com.imranamans.swinguibuilder;[m
[31m-[m
[31m-import java.awt.GridBagConstraints;[m
[31m-import java.awt.Insets;[m
[31m-[m
[31m-/*[m
[31m- * This class helps create GridBagConstraint objects.[m
[31m- * The instance variables are set to the Default values of GridBagConstraint.[m
[31m- * The constructor of this class initializes some of these variables to desired values.[m
[31m- */[m
[31m-public class GBC {[m
[31m-[m
[31m-	public static GBC init() {[m
[31m-		GBC gbc = new GBC();[m
[31m-		// Override defaults[m
[31m-		gbc.margin(3, 3, 5, 3);[m
[31m-		gbc.ipadx = 3;[m
[31m-		gbc.ipady = 3;[m
[31m-		return gbc;[m
[31m-	}[m
[31m-[m
[31m-	public GBC rowCol(int row, int column) {[m
[31m-		this.gridx = column;[m
[31m-		this.gridy = row;[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public GBC widthHeight(int gridwidth, int gridheight) {[m
[31m-		this.gridwidth = gridwidth;[m
[31m-		this.gridheight = gridheight;[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public GBC margin(int top, int right, int bottom, int left) {[m
[31m-		// this.insets = new Insets(5, 5, 10, 5); // top, left, bottom, right[m
[31m-		this.insets = new Insets(top, left, bottom, right);[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public GBC padding(int topBottom, int leftRight) {[m
[31m-		this.ipadx = topBottom;[m
[31m-		this.ipady = leftRight;[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public GBC stretch(double leftRight, double topBottom) {[m
[31m-		this.weightx = leftRight;[m
[31m-		this.weighty = topBottom;[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public GBC anchor(int compass) {[m
[31m-		this.anchor = compass;[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public GBC fill(int fill) {[m
[31m-		this.fill = fill;[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public GridBagConstraints gbc() {[m
[31m-		return new GridBagConstraints(gridx, gridy, gridwidth, gridheight,[m
[31m-				weightx, weighty, anchor, fill, insets, ipadx, ipady);[m
[31m-	}[m
[31m-[m
[31m-	// http://docstore.mik.ua/orelly/java/awt/ch07_07.htm[m
[31m-	/*[m
[31m-	 * The gridx and gridy variables specify the grid position where this[m
[31m-	 * component will be placed. (0,0) specifies the cell at the origin of the[m
[31m-	 * screen.[m
[31m-	 * [m
[31m-	 * It isn't necessary to set gridx and gridy to a specific location; if you[m
[31m-	 * set these fields to RELATIVE (the default), the system calculates the[m
[31m-	 * location for you. According to the comments in the source code, if gridx[m
[31m-	 * is RELATIVE, the component appears to the right of the last component[m
[31m-	 * added to the layout. If gridy is RELATIVE, the component appears below[m
[31m-	 * the last component added to the layout. However, this is misleadingly[m
[31m-	 * simple. RELATIVE placement works best if you are adding components along[m
[31m-	 * a row or a column. In this case, there are four possibilities to[m
[31m-	 * consider:[m
[31m-	 * [m
[31m-	 * gridx and gridy RELATIVE: components are placed in one row. gridx[m
[31m-	 * RELATIVE, gridy constant: components are placed in one row, each to the[m
[31m-	 * right of the previous component. gridx constant, gridy RELATIVE:[m
[31m-	 * components are placed in one column, each below the previous component.[m
[31m-	 * Varying gridx or gridy while setting the other field to RELATIVE appears[m
[31m-	 * to start a new row, placing the component as the first element in the[m
[31m-	 * row.[m
[31m-	 */[m
[31m-	// The component associated with this constraint will be positioned relative[m
[31m-	// to the last item added. If all components have gridx and gridy RELATIVE,[m
[31m-	// they will be placed in a single row.[m
[31m-	private int gridx = GridBagConstraints.RELATIVE;[m
[31m-	// The component associated with this constraint will be positioned relative[m
[31m-	// to the last item added.[m
[31m-	private int gridy = GridBagConstraints.RELATIVE;[m
[31m-	/*[m
[31m-	 * gridwidth and gridheight set the number of rows (gridwidth) and columns[m
[31m-	 * (gridheight) a particular component occupies. If gridwidth or gridheight[m
[31m-	 * is set to REMAINDER, the component will be the last element of the row or[m
[31m-	 * column occupying any space that's remaining. Table 7.2 shows the[m
[31m-	 * gridwidth and gridheight values for the screen in Figure 7.8. For the[m
[31m-	 * components in the last column, the gridwidth values could be REMAINDER.[m
[31m-	 * Likewise, gridheight could be set to REMAINDER for the components in the[m
[31m-	 * last row.[m
[31m-	 * [m
[31m-	 * gridwidth and gridheight may also have the value RELATIVE, which forces[m
[31m-	 * the component to be the next to last component in the row or column.[m
[31m-	 * Looking back to Figure 7.8: if button six has a gridwidth of RELATIVE,[m
[31m-	 * button seven won't appear because button five is the last item in the[m
[31m-	 * row, and six is already next to last. If button five has a gridheight of[m
[31m-	 * RELATIVE, the layout manager will reserve space below it, so the button[m
[31m-	 * can be the next to last item in the column.[m
[31m-	 */[m
[31m-	// The component will occupy a single cell within the layout.[m
[31m-	private int gridwidth = 1;[m
[31m-	// The component will occupy a single cell within the layout.[m
[31m-	private int gridheight = 1;[m
[31m-	/*[m
[31m-	 * The weightx and weighty variables describe how to distribute any[m
[31m-	 * additional space within the container. They allow you to control how[m
[31m-	 * components grow (or shrink) when the user resizes the container. If[m
[31m-	 * weightx is 0, the component won't get any additional space available in[m
[31m-	 * its row. If one or more components in a row have weightx values greater[m
[31m-	 * than 0, any extra space is distributed proportionally between them. For[m
[31m-	 * example, if one component has a weightx value of 1 and the others are all[m
[31m-	 * 0, that one component will get all the additional space. If four[m
[31m-	 * components in a row each have weightx values of 1 and the other[m
[31m-	 * components have weightx values of 0, the four components each get one[m
[31m-	 * quarter of the additional space. weighty behaves similarly. Because[m
[31m-	 * weightx and weighty control the distribution of extra space in any row or[m
[31m-	 * column, setting either for one component may affect the position of other[m
[31m-	 * components.[m
[31m-	 */[m
[31m-	// The component will not get any extra space, if it is available.[m
[31m-	private double weightx = 0.0;[m
[31m-	// The component will not get any extra space, if it is available.[m
[31m-	private double weighty = 0.0;[m
[31m-	/*[m
[31m-	 * The anchor specifies the direction in which the component will drift in[m
[31m-	 * the event that it is smaller than the space available for it. CENTER is[m
[31m-	 * the default. Others available are NORTH, SOUTH, EAST, WEST, NORTHEAST,[m
[31m-	 * NORTHWEST, SOUTHEAST, and SOUTHWEST.[m
[31m-	 */[m
[31m-	// If the component is smaller than the space available, it will be centered[m
[31m-	// within its region.[m
[31m-	private int anchor = GridBagConstraints.CENTER;[m
[31m-	/*[m
[31m-	 * The value of fill controls the component's resize policy. If fill is NONE[m
[31m-	 * (the default), the layout manager tries to give the component its[m
[31m-	 * preferred size. If fill is VERTICAL, it resizes in height if additional[m
[31m-	 * space is available. If fill is HORIZONTAL, it resizes in width. If fill[m
[31m-	 * is BOTH, the layout manager takes advantage of all the space available in[m
[31m-	 * either direction.[m
[31m-	 */[m
[31m-	// The component should not resize itself if extra space is available within[m
[31m-	// its region.[m
[31m-	private int fill = GridBagConstraints.NONE;[m
[31m-	/*[m
[31m-	 * The insets field specifies the external padding in pixels around the[m
[31m-	 * component (i.e., between the component and the edge of the cell, or[m
[31m-	 * cells, allotted to it). An Insets object can specify different padding[m
[31m-	 * for the top, bottom, left, and right sides of the component.[m
[31m-	 */[m
[31m-	// No extra space is added around the edges of the component.[m
[31m-	private Insets insets = new Insets(0, 0, 0, 0); // top, left, bottom, right[m
[31m-	/*[m
[31m-	 * ipadx and ipady specify the internal padding within the component. ipadx[m
[31m-	 * specifies the extra space to the right and left of the component (so the[m
[31m-	 * minimum width increases by 2*ipadx pixels). ipady specifies the extra[m
[31m-	 * space above and below the component (so the minimum height increases by[m
[31m-	 * 2*ipady pixels).[m
[31m-	 * [m
[31m-	 * The difference between insets (external padding) and the ipadx, ipady[m
[31m-	 * variables (internal padding) is confusing. The insets don't add space to[m
[31m-	 * the component itself; they are external to the component. ipadx and ipady[m
[31m-	 * change the component's minimum size, so they do add space to the[m
[31m-	 * component itself.[m
[31m-	 */[m
[31m-	// There is no internal padding for the component.[m
[31m-	private int ipadx = 0;[m
[31m-	// There is no internal padding for the component.[m
[31m-	private int ipady = 0;[m
[31m-[m
[31m-}[m
[32m+[m[32mpackage com.imranamans.swinguibuilder;[m
[32m+[m
[32m+[m[32mimport java.awt.GridBagConstraints;[m
[32m+[m[32mimport java.awt.Insets;[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m * This class helps create GridBagConstraint objects.[m
[32m+[m[32m * The instance variables are set to the Default values of GridBagConstraint.[m
[32m+[m[32m * The constructor of this class initializes some of these variables to desired values.[m
[32m+[m[32m */[m
[32m+[m[32mpublic class GBC {[m
[32m+[m
[32m+[m	[32mpublic static GBC init() {[m
[32m+[m		[32mGBC gbc = new GBC();[m
[32m+[m		[32m// Override defaults[m
[32m+[m		[32mgbc.margin(3, 3, 5, 3);[m
[32m+[m		[32mgbc.ipadx = 3;[m
[32m+[m		[32mgbc.ipady = 3;[m
[32m+[m		[32mreturn gbc;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic GBC rowCol(int row, int column) {[m
[32m+[m		[32mthis.gridx = column;[m
[32m+[m		[32mthis.gridy = row;[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic GBC widthHeight(int gridwidth, int gridheight) {[m
[32m+[m		[32mthis.gridwidth = gridwidth;[m
[32m+[m		[32mthis.gridheight = gridheight;[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic GBC margin(int top, int right, int bottom, int left) {[m
[32m+[m		[32m// this.insets = new Insets(5, 5, 10, 5); // top, left, bottom, right[m
[32m+[m		[32mthis.insets = new Insets(top, left, bottom, right);[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic GBC padding(int topBottom, int leftRight) {[m
[32m+[m		[32mthis.ipadx = topBottom;[m
[32m+[m		[32mthis.ipady = leftRight;[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic GBC stretch(double leftRight, double topBottom) {[m
[32m+[m		[32mthis.weightx = leftRight;[m
[32m+[m		[32mthis.weighty = topBottom;[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic GBC anchor(int compass) {[m
[32m+[m		[32mthis.anchor = compass;[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic GBC fill(int fill) {[m
[32m+[m		[32mthis.fill = fill;[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic GridBagConstraints gbc() {[m
[32m+[m		[32mreturn new GridBagConstraints(gridx, gridy, gridwidth, gridheight,[m
[32m+[m				[32mweightx, weighty, anchor, fill, insets, ipadx, ipady);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// http://docstore.mik.ua/orelly/java/awt/ch07_07.htm[m
[32m+[m	[32m/*[m
[32m+[m	[32m * The gridx and gridy variables specify the grid position where this[m
[32m+[m	[32m * component will be placed. (0,0) specifies the cell at the origin of the[m
[32m+[m	[32m * screen.[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * It isn't necessary to set gridx and gridy to a specific location; if you[m
[32m+[m	[32m * set these fields to RELATIVE (the default), the system calculates the[m
[32m+[m	[32m * location for you. According to the comments in the source code, if gridx[m
[32m+[m	[32m * is RELATIVE, the component appears to the right of the last component[m
[32m+[m	[32m * added to the layout. If gridy is RELATIVE, the component appears below[m
[32m+[m	[32m * the last component added to the layout. However, this is misleadingly[m
[32m+[m	[32m * simple. RELATIVE placement works best if you are adding components along[m
[32m+[m	[32m * a row or a column. In this case, there are four possibilities to[m
[32m+[m	[32m * consider:[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * gridx and gridy RELATIVE: components are placed in one row. gridx[m
[32m+[m	[32m * RELATIVE, gridy constant: components are placed in one row, each to the[m
[32m+[m	[32m * right of the previous component. gridx constant, gridy RELATIVE:[m
[32m+[m	[32m * components are placed in one column, each below the previous component.[m
[32m+[m	[32m * Varying gridx or gridy while setting the other field to RELATIVE appears[m
[32m+[m	[32m * to start a new row, placing the component as the first element in the[m
[32m+[m	[32m * row.[m
[32m+[m	[32m */[m
[32m+[m	[32m// The component associated with this constraint will be positioned relative[m
[32m+[m	[32m// to the last item added. If all components have gridx and gridy RELATIVE,[m
[32m+[m	[32m// they will be placed in a single row.[m
[32m+[m	[32mprivate int gridx = GridBagConstraints.RELATIVE;[m
[32m+[m	[32m// The component associated with this constraint will be positioned relative[m
[32m+[m	[32m// to the last item added.[m
[32m+[m	[32mprivate int gridy = GridBagConstraints.RELATIVE;[m
[32m+[m	[32m/*[m
[32m+[m	[32m * gridwidth and gridheight set the number of rows (gridwidth) and columns[m
[32m+[m	[32m * (gridheight) a particular component occupies. If gridwidth or gridheight[m
[32m+[m	[32m * is set to REMAINDER, the component will be the last element of the row or[m
[32m+[m	[32m * column occupying any space that's remaining. Table 7.2 shows the[m
[32m+[m	[32m * gridwidth and gridheight values for the screen in Figure 7.8. For the[m
[32m+[m	[32m * components in the last column, the gridwidth values could be REMAINDER.[m
[32m+[m	[32m * Likewise, gridheight could be set to REMAINDER for the components in the[m
[32m+[m	[32m * last row.[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * gridwidth and gridheight may also have the value RELATIVE, which forces[m
[32m+[m	[32m * the component to be the next to last component in the row or column.[m
[32m+[m	[32m * Looking back to Figure 7.8: if button six has a gridwidth of RELATIVE,[m
[32m+[m	[32m * button seven won't appear because button five is the last item in the[m
[32m+[m	[32m * row, and six is already next to last. If button five has a gridheight of[m
[32m+[m	[32m * RELATIVE, the layout manager will reserve space below it, so the button[m
[32m+[m	[32m * can be the next to last item in the column.[m
[32m+[m	[32m */[m
[32m+[m	[32m// The component will occupy a single cell within the layout.[m
[32m+[m	[32mprivate int gridwidth = 1;[m
[32m+[m	[32m// The component will occupy a single cell within the layout.[m
[32m+[m	[32mprivate int gridheight = 1;[m
[32m+[m	[32m/*[m
[32m+[m	[32m * The weightx and weighty variables describe how to distribute any[m
[32m+[m	[32m * additional space within the container. They allow you to control how[m
[32m+[m	[32m * components grow (or shrink) when the user resizes the container. If[m
[32m+[m	[32m * weightx is 0, the component won't get any additional space available in[m
[32m+[m	[32m * its row. If one or more components in a row have weightx values greater[m
[32m+[m	[32m * than 0, any extra space is distributed proportionally between them. For[m
[32m+[m	[32m * example, if one component has a weightx value of 1 and the others are all[m
[32m+[m	[32m * 0, that one component will get all the additional space. If four[m
[32m+[m	[32m * components in a row each have weightx values of 1 and the other[m
[32m+[m	[32m * components have weightx values of 0, the four components each get one[m
[32m+[m	[32m * quarter of the additional space. weighty behaves similarly. Because[m
[32m+[m	[32m * weightx and weighty control the distribution of extra space in any row or[m
[32m+[m	[32m * column, setting either for one component may affect the position of other[m
[32m+[m	[32m * components.[m
[32m+[m	[32m */[m
[32m+[m	[32m// The component will not get any extra space, if it is available.[m
[32m+[m	[32mprivate double weightx = 0.0;[m
[32m+[m	[32m// The component will not get any extra space, if it is available.[m
[32m+[m	[32mprivate double weighty = 0.0;[m
[32m+[m	[32m/*[m
[32m+[m	[32m * The anchor specifies the direction in which the component will drift in[m
[32m+[m	[32m * the event that it is smaller than the space available for it. CENTER is[m
[32m+[m	[32m * the default. Others available are NORTH, SOUTH, EAST, WEST, NORTHEAST,[m
[32m+[m	[32m * NORTHWEST, SOUTHEAST, and SOUTHWEST.[m
[32m+[m	[32m */[m
[32m+[m	[32m// If the component is smaller than the space available, it will be centered[m
[32m+[m	[32m// within its region.[m
[32m+[m	[32mprivate int anchor = GridBagConstraints.CENTER;[m
[32m+[m	[32m/*[m
[32m+[m	[32m * The value of fill controls the component's resize policy. If fill is NONE[m
[32m+[m	[32m * (the default), the layout manager tries to give the component its[m
[32m+[m	[32m * preferred size. If fill is VERTICAL, it resizes in height if additional[m
[32m+[m	[32m * space is available. If fill is HORIZONTAL, it resizes in width. If fill[m
[32m+[m	[32m * is BOTH, the layout manager takes advantage of all the space available in[m
[32m+[m	[32m * either direction.[m
[32m+[m	[32m */[m
[32m+[m	[32m// The component should not resize itself if extra space is available within[m
[32m+[m	[32m// its region.[m
[32m+[m	[32mprivate int fill = GridBagConstraints.NONE;[m
[32m+[m	[32m/*[m
[32m+[m	[32m * The insets field specifies the external padding in pixels around the[m
[32m+[m	[32m * component (i.e., between the component and the edge of the cell, or[m
[32m+[m	[32m * cells, allotted to it). An Insets object can specify different padding[m
[32m+[m	[32m * for the top, bottom, left, and right sides of the component.[m
[32m+[m	[32m */[m
[32m+[m	[32m// No extra space is added around the edges of the component.[m
[32m+[m	[32mprivate Insets insets = new Insets(0, 0, 0, 0); // top, left, bottom, right[m
[32m+[m	[32m/*[m
[32m+[m	[32m * ipadx and ipady specify the internal padding within the component. ipadx[m
[32m+[m	[32m * specifies the extra space to the right and left of the component (so the[m
[32m+[m	[32m * minimum width increases by 2*ipadx pixels). ipady specifies the extra[m
[32m+[m	[32m * space above and below the component (so the minimum height increases by[m
[32m+[m	[32m * 2*ipady pixels).[m
[32m+[m	[32m *[m[41m [m
[32m+[m	[32m * The difference between insets (external padding) and the ipadx, ipady[m
[32m+[m	[32m * variables (internal padding) is confusing. The insets don't add space to[m
[32m+[m	[32m * the component itself; they are external to the component. ipadx and ipady[m
[32m+[m	[32m * change the component's minimum size, so they do add space to the[m
[32m+[m	[32m * component itself.[m
[32m+[m	[32m */[m
[32m+[m	[32m// There is no internal padding for the component.[m
[32m+[m	[32mprivate int ipadx = 0;[m
[32m+[m	[32m// There is no internal padding for the component.[m
[32m+[m	[32mprivate int ipady = 0;[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/SwingComponentFactory.java b/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/SwingComponentFactory.java[m
[1mindex bc1ae8e..871c22e 100644[m
[1m--- a/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/SwingComponentFactory.java[m
[1m+++ b/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/SwingComponentFactory.java[m
[36m@@ -1,84 +1,84 @@[m
[31m-/**[m
[31m- * [m
[31m- */[m
[31m-package com.imranamans.swinguibuilder;[m
[31m-[m
[31m-import java.awt.Dimension;[m
[31m-[m
[31m-import javax.swing.JButton;[m
[31m-import javax.swing.JFileChooser;[m
[31m-import javax.swing.JFrame;[m
[31m-import javax.swing.JLabel;[m
[31m-import javax.swing.JPanel;[m
[31m-import javax.swing.JSeparator;[m
[31m-import javax.swing.JTextField;[m
[31m-import javax.swing.SwingConstants;[m
[31m-[m
[31m-/**[m
[31m- * @author SHAHI[m
[31m- * [m
[31m- */[m
[31m-public class SwingComponentFactory {[m
[31m-[m
[31m-	private SwingComponentFactory() {[m
[31m-	}[m
[31m-[m
[31m-	public static JFrame createFrame() {[m
[31m-		JFrame jFrame = new JFrame();[m
[31m-		return jFrame;[m
[31m-	}[m
[31m-[m
[31m-	public static JPanel createPanel() {[m
[31m-		JPanel jPanel = new JPanel(); // default is flow layout.[m
[31m-		return jPanel;[m
[31m-	}[m
[31m-	[m
[31m-	public static Dimension createDimension(int width, int height) {[m
[31m-		Dimension dimension = new Dimension();[m
[31m-		dimension.width = width;[m
[31m-		dimension.height = height;[m
[31m-		return dimension;[m
[31m-	}[m
[31m-[m
[31m-	public static JLabel createLabel(String text) {[m
[31m-		JLabel jLabel = new JLabel();[m
[31m-		// text does not wrap automatically and so work around.[m
[31m-		jLabel.setText("<html><body><table><tr><td>" + text[m
[31m-				+ "</td></tr></table></body></html>"); [m
[31m-		jLabel.setName(text+"_lbl");[m
[31m-		// jLabel.setPreferredSize(createDimension(120, 25));[m
[31m-		jLabel.setHorizontalAlignment(SwingConstants.RIGHT);[m
[31m-		return jLabel;[m
[31m-	}[m
[31m-[m
[31m-	public static JFileChooser createFileChooser() {[m
[31m-		JFileChooser jFileChooser = new JFileChooser();[m
[31m-		jFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);[m
[31m-		return jFileChooser;[m
[31m-	}[m
[31m-	[m
[31m-	public static JFileChooser createFolderChooser() {[m
[31m-		JFileChooser jFileChooser = new JFileChooser();[m
[31m-		jFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);[m
[31m-		return jFileChooser;[m
[31m-	}[m
[31m-	[m
[31m-	public static JTextField createTextField(String name) {[m
[31m-		JTextField jTextField = new JTextField();[m
[31m-		jTextField.setName(name + "_txt");[m
[31m-		jTextField.setPreferredSize(createDimension(240, 25));[m
[31m-		return jTextField;[m
[31m-	}[m
[31m-	[m
[31m-	public static JSeparator createHorizontalSeparator() {[m
[31m-		JSeparator jSeparator = new JSeparator(SwingConstants.HORIZONTAL);[m
[31m-		//jSeparator.setPreferredSize()[m
[31m-		return jSeparator;[m
[31m-	}[m
[31m-	[m
[31m-	public static JButton createButton(String text) {[m
[31m-		JButton jButton = new JButton(text);[m
[31m-		jButton.setPreferredSize(createDimension(80, 26));[m
[31m-		return jButton;[m
[31m-	}[m
[31m-}[m
[32m+[m[32m/**[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m */[m
[32m+[m[32mpackage com.imranamans.swinguibuilder;[m
[32m+[m
[32m+[m[32mimport java.awt.Dimension;[m
[32m+[m
[32m+[m[32mimport javax.swing.JButton;[m
[32m+[m[32mimport javax.swing.JFileChooser;[m
[32m+[m[32mimport javax.swing.JFrame;[m
[32m+[m[32mimport javax.swing.JLabel;[m
[32m+[m[32mimport javax.swing.JPanel;[m
[32m+[m[32mimport javax.swing.JSeparator;[m
[32m+[m[32mimport javax.swing.JTextField;[m
[32m+[m[32mimport javax.swing.SwingConstants;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @author SHAHI[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m */[m
[32m+[m[32mpublic class SwingComponentFactory {[m
[32m+[m
[32m+[m	[32mprivate SwingComponentFactory() {[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static JFrame createFrame() {[m
[32m+[m		[32mJFrame jFrame = new JFrame();[m
[32m+[m		[32mreturn jFrame;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static JPanel createPanel() {[m
[32m+[m		[32mJPanel jPanel = new JPanel(); // default is flow layout.[m
[32m+[m		[32mreturn jPanel;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static Dimension createDimension(int width, int height) {[m
[32m+[m		[32mDimension dimension = new Dimension();[m
[32m+[m		[32mdimension.width = width;[m
[32m+[m		[32mdimension.height = height;[m
[32m+[m		[32mreturn dimension;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static JLabel createLabel(String text) {[m
[32m+[m		[32mJLabel jLabel = new JLabel();[m
[32m+[m		[32m// text does not wrap automatically and so work around.[m
[32m+[m		[32mjLabel.setText("<html><body><table><tr><td>" + text[m
[32m+[m				[32m+ "</td></tr></table></body></html>");[m[41m [m
[32m+[m		[32mjLabel.setName(text+"_lbl");[m
[32m+[m		[32m// jLabel.setPreferredSize(createDimension(120, 25));[m
[32m+[m		[32mjLabel.setHorizontalAlignment(SwingConstants.RIGHT);[m
[32m+[m		[32mreturn jLabel;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static JFileChooser createFileChooser() {[m
[32m+[m		[32mJFileChooser jFileChooser = new JFileChooser();[m
[32m+[m		[32mjFileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);[m
[32m+[m		[32mreturn jFileChooser;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static JFileChooser createFolderChooser() {[m
[32m+[m		[32mJFileChooser jFileChooser = new JFileChooser();[m
[32m+[m		[32mjFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);[m
[32m+[m		[32mreturn jFileChooser;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static JTextField createTextField(String name) {[m
[32m+[m		[32mJTextField jTextField = new JTextField();[m
[32m+[m		[32mjTextField.setName(name + "_txt");[m
[32m+[m		[32mjTextField.setPreferredSize(createDimension(240, 25));[m
[32m+[m		[32mreturn jTextField;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static JSeparator createHorizontalSeparator() {[m
[32m+[m		[32mJSeparator jSeparator = new JSeparator(SwingConstants.HORIZONTAL);[m
[32m+[m		[32m//jSeparator.setPreferredSize()[m
[32m+[m		[32mreturn jSeparator;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static JButton createButton(String text) {[m
[32m+[m		[32mJButton jButton = new JButton(text);[m
[32m+[m		[32mjButton.setPreferredSize(createDimension(80, 26));[m
[32m+[m		[32mreturn jButton;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/SwingUiBuilder.java b/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/SwingUiBuilder.java[m
[1mindex 3e45d15..dca2fce 100644[m
[1m--- a/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/SwingUiBuilder.java[m
[1m+++ b/SwingUiBuilder/src/main/java/com/imranamans/swinguibuilder/SwingUiBuilder.java[m
[36m@@ -1,397 +1,397 @@[m
[31m-package com.imranamans.swinguibuilder;[m
[31m-[m
[31m-import java.awt.BorderLayout;[m
[31m-import java.awt.Color;[m
[31m-import java.awt.Component;[m
[31m-import java.awt.Container;[m
[31m-import java.awt.Dimension;[m
[31m-import java.awt.EventQueue;[m
[31m-import java.awt.GridBagConstraints;[m
[31m-import java.awt.GridBagLayout;[m
[31m-import java.awt.LayoutManager;[m
[31m-import java.awt.event.ActionEvent;[m
[31m-import java.awt.event.ActionListener;[m
[31m-import java.io.File;[m
[31m-import java.util.Enumeration;[m
[31m-import java.util.Stack;[m
[31m-[m
[31m-import javax.swing.BorderFactory;[m
[31m-import javax.swing.JButton;[m
[31m-import javax.swing.JComponent;[m
[31m-import javax.swing.JFileChooser;[m
[31m-import javax.swing.JFrame;[m
[31m-import javax.swing.JLabel;[m
[31m-import javax.swing.JPanel;[m
[31m-import javax.swing.JSeparator;[m
[31m-import javax.swing.JTextField;[m
[31m-import javax.swing.UIManager;[m
[31m-import javax.swing.tree.DefaultMutableTreeNode;[m
[31m-import javax.swing.tree.MutableTreeNode;[m
[31m-[m
[31m-/**[m
[31m- * @author SHAHI[m
[31m- * [m
[31m- */[m
[31m-public class SwingUiBuilder {[m
[31m-[m
[31m-	private DefaultMutableTreeNode componentTreeNode = null;[m
[31m-	private boolean debugEnabled = false;[m
[31m-[m
[31m-	private static void example1() {[m
[31m-		/* @formatter:off */[m
[31m-		SwingUiBuilder.getNewInstance(false)[m
[31m-			.createFrame(new GridBagLayout())[m
[31m-				.addPanel(GBC.init().rowCol(0, 0).stretch(1, 1).gbc(), new GridBagLayout())[m
[31m-					.addLabel("Label 0", GBC.init().rowCol(0, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addTextField("Label 0", GBC.init().rowCol(0, 1).gbc())[m
[31m-						.getParent()[m
[31m-					.addLabel("Label 1", GBC.init().rowCol(1, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addTextField("Label 1", GBC.init().rowCol(1, 1).gbc())[m
[31m-						.getParent()[m
[31m-					.getParent()[m
[31m-				.addRowSeparator(GBC.init().rowCol(1, 0).anchor(GridBagConstraints.WEST).fill(GridBagConstraints.BOTH).stretch(1, 0).gbc())[m
[31m-					.getParent()[m
[31m-				.addPanel(GBC.init().rowCol(2, 0).gbc(), new GridBagLayout())[m
[31m-					.addLabel("Forcing this to be a long lable so it goes beyond the length of its containers standard width ", GBC.init().rowCol(0, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addTextField("Label 5", GBC.init().rowCol(0, 1).gbc())[m
[31m-						.getParent()[m
[31m-					.getParent()[m
[31m-				.addRowSeparator(GBC.init().rowCol(3, 0).anchor(GridBagConstraints.SOUTHWEST).fill(GridBagConstraints.BOTH).stretch(1, 0).gbc())[m
[31m-					.getParent()[m
[31m-				.addPanel(GBC.init().rowCol(4, 0).fill(GridBagConstraints.HORIZONTAL).stretch(1, 0).gbc(), new GridBagLayout())[m
[31m-					.addButton("Button 1", GBC.init().anchor(GridBagConstraints.EAST).stretch(1, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addButton("Button 2", GBC.init().anchor(GridBagConstraints.EAST).gbc())[m
[31m-						.show();[m
[31m-		/* @formatter:on */[m
[31m-	}[m
[31m-	[m
[31m-	private static void example2() {[m
[31m-		/* @formatter:off */[m
[31m-		SwingUiBuilder.getNewInstance(false)[m
[31m-			.createFrame(new GridBagLayout())[m
[31m-				.addPanel(GBC.init().rowCol(0, 0).stretch(1, 1).gbc(), new GridBagLayout())[m
[31m-					.addLabel("Label 0", GBC.init().anchor(GridBagConstraints.EAST).rowCol(0, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addTextField("Label 0", GBC.init().rowCol(0, 1).gbc())[m
[31m-						.getParent()[m
[31m-					.addLabel("Label 1", GBC.init().anchor(GridBagConstraints.EAST).rowCol(1, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addTextField("Label 1", GBC.init().rowCol(1, 1).gbc())[m
[31m-						.getParent()[m
[31m-					.addLabel("Big Long Label 2", GBC.init().anchor(GridBagConstraints.EAST).rowCol(2, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addTextField("Big Long Label 2", GBC.init().rowCol(2, 1).gbc())[m
[31m-						.getParent()[m
[31m-					.addLabel("Workspace Path", GBC.init().anchor(GridBagConstraints.EAST).rowCol(3, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addTextField("Workspace Path", GBC.init().rowCol(3, 1).gbc())[m
[31m-						.getParent()[m
[31m-					.addFolderSelectionButton("Browse", "Workspace Path", GBC.init().rowCol(3, 2).gbc())[m
[31m-						.getParent()[m
[31m-					.getParent()[m
[31m-				.addPanel(GBC.init().rowCol(2, 0).fill(GridBagConstraints.HORIZONTAL).stretch(1, 0).gbc(), new GridBagLayout())[m
[31m-					.addRowSeparator(GBC.init().rowCol(0, 0).widthHeight(2, 1).anchor(GridBagConstraints.SOUTHWEST).fill(GridBagConstraints.HORIZONTAL).stretch(1, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addButton("Ok", GBC.init().rowCol(1, 0).anchor(GridBagConstraints.EAST).stretch(1, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addButton("Cancel", GBC.init().rowCol(1, 1).anchor(GridBagConstraints.EAST).gbc())[m
[31m-						.show();[m
[31m-		/* @formatter:on */[m
[31m-	}[m
[31m-	[m
[31m-	public static void main(String[] args) {[m
[31m-[m
[31m-//		example1();[m
[31m-		example2();[m
[31m-	}[m
[31m-	[m
[31m-	public SwingUiBuilder(boolean debugEnabled) {[m
[31m-		try {[m
[31m-			UIManager[m
[31m-				.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");[m
[31m-		} catch (Exception e) {[m
[31m-			throw new RuntimeException(e);[m
[31m-		}[m
[31m-		this.debugEnabled = debugEnabled;[m
[31m-	}[m
[31m-	[m
[31m-	public SwingUiBuilder addFolderSelectionButton(String buttonName,[m
[31m-			final String textFieldName, Object constraints) {[m
[31m-[m
[31m-		final JPanel jPanel = (JPanel) getCurrentObject();[m
[31m-[m
[31m-		JButton jButton = SwingComponentFactory.createButton(buttonName);[m
[31m-		jButton.addActionListener(new ActionListener() {[m
[31m-[m
[31m-			@Override[m
[31m-			public void actionPerformed(ActionEvent arg0) {[m
[31m-				JFileChooser jFileChooser = SwingComponentFactory[m
[31m-						.createFolderChooser();[m
[31m-				int returnVal = jFileChooser.showOpenDialog(jPanel);[m
[31m-[m
[31m-				if (returnVal == JFileChooser.APPROVE_OPTION) {[m
[31m-					File file = jFileChooser.getSelectedFile();[m
[31m-					JTextField jTextField = (JTextField) getComponent(textFieldName + "_txt");[m
[31m-					jTextField.setText(file.getPath());[m
[31m-				}[m
[31m-				// Reset the file chooser for the next time it's shown.[m
[31m-				jFileChooser.setSelectedFile(null);[m
[31m-			}[m
[31m-		});[m
[31m-		if (constraints != null) {[m
[31m-			jPanel.add(jButton, constraints);[m
[31m-		} else {[m
[31m-			jPanel.add(jButton);[m
[31m-		}[m
[31m-		setCurrentObject(jButton);[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public SwingUiBuilder addTextInput(String label) {[m
[31m-[m
[31m-		JPanel jPanel = (JPanel) getCurrentObject();[m
[31m-		JLabel jLabel = SwingComponentFactory.createLabel(label);[m
[31m-		jPanel.add(jLabel);[m
[31m-		setCurrentObject(jLabel);[m
[31m-		getParent();[m
[31m-		JTextField jTextField = SwingComponentFactory.createTextField(label);[m
[31m-		jPanel.add(jTextField);[m
[31m-		setCurrentObject(jTextField);[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public SwingUiBuilder addRowSeparator(Object constraints) {[m
[31m-[m
[31m-		JPanel jPanel = (JPanel) getCurrentObject();[m
[31m-		JSeparator jSeparator = SwingComponentFactory.createHorizontalSeparator();[m
[31m-		if (constraints != null) {[m
[31m-			jPanel.add(jSeparator, constraints);[m
[31m-		} else {[m
[31m-			jPanel.add(jSeparator);[m
[31m-		}[m
[31m-		setCurrentObject(jSeparator);[m
[31m-[m
[31m-		return this;[m
[31m-	}[m
[31m-	[m
[31m-	public SwingUiBuilder addTextField(String name, Object constraints) {[m
[31m-		[m
[31m-		JPanel jPanel = (JPanel) getCurrentObject();[m
[31m-		JTextField jTextField = SwingComponentFactory.createTextField(name);[m
[31m-		if (constraints != null) {[m
[31m-			jPanel.add(jTextField, constraints);[m
[31m-		} else {[m
[31m-			jPanel.add(jTextField);[m
[31m-		}[m
[31m-		setCurrentObject(jTextField);[m
[31m-		[m
[31m-		return this;[m
[31m-	}[m
[31m-	[m
[31m-	public SwingUiBuilder addButton(String name, Object constraints) {[m
[31m-[m
[31m-		JPanel jPanel = (JPanel) getCurrentObject();[m
[31m-		JButton jButton = SwingComponentFactory.createButton(name);[m
[31m-		if (constraints != null) {[m
[31m-			jPanel.add(jButton, constraints);[m
[31m-		} else {[m
[31m-			jPanel.add(jButton);[m
[31m-		}[m
[31m-		setCurrentObject(jButton);[m
[31m-[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public SwingUiBuilder addLabel(String text, Object constraints) {[m
[31m-[m
[31m-		JPanel jPanel = (JPanel) getCurrentObject();[m
[31m-		JLabel jLabel = SwingComponentFactory.createLabel(text);[m
[31m-		if (constraints != null) {[m
[31m-			jPanel.add(jLabel, constraints);[m
[31m-		} else {[m
[31m-			jPanel.add(jLabel);[m
[31m-		}[m
[31m-		setCurrentObject(jLabel);[m
[31m-[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public SwingUiBuilder addPanel(Object constraints,[m
[31m-			LayoutManager layoutManager) {[m
[31m-[m
[31m-		JPanel jPanel = SwingComponentFactory.createPanel();[m
[31m-		if (layoutManager != null) {[m
[31m-			jPanel.setLayout(layoutManager);[m
[31m-		}[m
[31m-		Container container = (Container) getCurrentObject();[m
[31m-[m
[31m-		if (constraints != null) {[m
[31m-			container.add(jPanel, constraints);[m
[31m-		} else {[m
[31m-			container.add(jPanel);[m
[31m-		}[m
[31m-		setCurrentObject(jPanel);[m
[31m-[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public void show() {[m
[31m-[m
[31m-		EventQueue.invokeLater(new Runnable() {[m
[31m-			public void run() {[m
[31m-				try {[m
[31m-					Container root = getRoot();[m
[31m-					if (root instanceof JFrame) {[m
[31m-						JFrame rootFrame = ((JFrame) root);[m
[31m-						rootFrame.pack();[m
[31m-						Dimension dimension =  rootFrame.getPreferredSize();[m
[31m-						rootFrame.setMinimumSize(dimension);[m
[31m-					}[m
[31m-					root.setVisible(true);[m
[31m-				} catch (Exception e) {[m
[31m-					throw new RuntimeException(e);[m
[31m-				}[m
[31m-			}[m
[31m-		});[m
[31m-	}[m
[31m-[m
[31m-	public SwingUiBuilder createFrame(LayoutManager layoutManager) {[m
[31m-[m
[31m-		JFrame jframe = SwingComponentFactory.createFrame();[m
[31m-		jframe.setLayout(new BorderLayout());[m
[31m-		jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);[m
[31m-		JPanel jPanel = SwingComponentFactory.createPanel();[m
[31m-		jPanel.setLayout(layoutManager);[m
[31m-		jframe.getContentPane().add(jPanel, BorderLayout.CENTER);[m
[31m-		setRoot(jframe);[m
[31m-		setCurrentObject(jPanel);[m
[31m-[m
[31m-		return this;[m
[31m-	}[m
[31m-[m
[31m-	public SwingUiBuilder getParent() {[m
[31m-		componentTreeNode = (DefaultMutableTreeNode) componentTreeNode[m
[31m-				.getParent();[m
[31m-		return this;[m
[31m-	}[m
[31m-	[m
[31m-	private Component getComponent(String componentName) {[m
[31m-		DefaultMutableTreeNode node = find([m
[31m-				(DefaultMutableTreeNode) getCurrentNode().getRoot(),[m
[31m-				componentName);[m
[31m-		return (Component) node.getUserObject();[m
[31m-	}[m
[31m-[m
[31m-	private Component getCurrentObject() {[m
[31m-		return (Component) componentTreeNode.getUserObject();[m
[31m-	}[m
[31m-[m
[31m-	public DefaultMutableTreeNode getCurrentNode() {[m
[31m-		return componentTreeNode;[m
[31m-	}[m
[31m-[m
[31m-	private void setCurrentObject(Component component) {[m
[31m-[m
[31m-		if (componentTreeNode != null) {[m
[31m-			MutableTreeNode treeNode = new DefaultMutableTreeNode(component);[m
[31m-			componentTreeNode.add(treeNode);[m
[31m-			componentTreeNode = (DefaultMutableTreeNode) treeNode;[m
[31m-		} else {[m
[31m-			componentTreeNode = new DefaultMutableTreeNode(component, true);[m
[31m-		}[m
[31m-		checkDebugEnabled(component);[m
[31m-		print(getName(component));[m
[31m-	}[m
[31m-	[m
[31m-	private void checkDebugEnabled(Component component) {[m
[31m-		if (this.debugEnabled) {[m
[31m-			if (component instanceof JComponent) {[m
[31m-				((JComponent) component).setBorder(BorderFactory[m
[31m-						.createLineBorder(Color.RED));[m
[31m-			}[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	private void setRoot(Container container) {[m
[31m-[m
[31m-		setCurrentObject(container);[m
[31m-	}[m
[31m-[m
[31m-	public Container getRoot() {[m
[31m-		prettyPrintTree();[m
[31m-		DefaultMutableTreeNode node = (DefaultMutableTreeNode) this.componentTreeNode[m
[31m-				.getRoot();[m
[31m-		return (Container) node.getUserObject();[m
[31m-	}[m
[31m-[m
[31m-	public static SwingUiBuilder getNewInstance(boolean debugEnabled) {[m
[31m-[m
[31m-		return new SwingUiBuilder(debugEnabled);[m
[31m-	}[m
[31m-[m
[31m-	private String getName(Component component) {[m
[31m-[m
[31m-		return String.format("%s (%s)", component.getClass().getSimpleName(),[m
[31m-				component.getName());[m
[31m-	}[m
[31m-[m
[31m-	private void print(String output) {[m
[31m-[m
[31m-		System.out.printf("%s - %s\n", this.getClass().getSimpleName(), output);[m
[31m-	}[m
[31m-[m
[31m-	private void prettyPrintTree() {[m
[31m-[m
[31m-		if (componentTreeNode != null) {[m
[31m-			DefaultMutableTreeNode treeRoot = (DefaultMutableTreeNode) componentTreeNode[m
[31m-					.getRoot();[m
[31m-			StringBuilder stringBuilder = new StringBuilder();[m
[31m-			stringBuilder.append("\n");[m
[31m-			prettyPrintTree(treeRoot, stringBuilder);[m
[31m-			print(stringBuilder.toString());[m
[31m-		}[m
[31m-	}[m
[31m-[m
[31m-	@SuppressWarnings("unchecked")[m
[31m-	private void prettyPrintTree(DefaultMutableTreeNode node,[m
[31m-			StringBuilder stringBuilder) {[m
[31m-[m
[31m-		stringBuilder.append(getName((Component) node.getUserObject()) + "\n");[m
[31m-		Enumeration<DefaultMutableTreeNode> children = node.children();[m
[31m-		while (children.hasMoreElements()) {[m
[31m-			node = (DefaultMutableTreeNode) children.nextElement();[m
[31m-			for (int i = 0; i < node.getLevel(); i++) {[m
[31m-				stringBuilder.append("    ");[m
[31m-			}[m
[31m-			prettyPrintTree(node, stringBuilder);[m
[31m-		}[m
[31m-	}[m
[31m-	[m
[31m-	protected DefaultMutableTreeNode find(DefaultMutableTreeNode node,[m
[31m-			String userObjectName) {[m
[31m-		Stack<DefaultMutableTreeNode> stack = new Stack<DefaultMutableTreeNode>();[m
[31m-		stack.push(node);[m
[31m-[m
[31m-		DefaultMutableTreeNode temp = null;[m
[31m-		// contextSet.add(rootNode.getType());[m
[31m-		found: {[m
[31m-			while (!stack.isEmpty()) {[m
[31m-				DefaultMutableTreeNode r = stack.pop();[m
[31m-				for (int i = 0; i < r.getChildCount(); i++) {[m
[31m-					temp = (DefaultMutableTreeNode) r.getChildAt(i);[m
[31m-					if (userObjectName[m
[31m-							.equals(((Component) temp.getUserObject())[m
[31m-									.getName())) {[m
[31m-						break found;[m
[31m-					}[m
[31m-					stack.push(temp);[m
[31m-				}[m
[31m-			}[m
[31m-		}[m
[31m-		return temp;[m
[31m-	}[m
[31m-}[m
[32m+[m[32mpackage com.imranamans.swinguibuilder;[m
[32m+[m
[32m+[m[32mimport java.awt.BorderLayout;[m
[32m+[m[32mimport java.awt.Color;[m
[32m+[m[32mimport java.awt.Component;[m
[32m+[m[32mimport java.awt.Container;[m
[32m+[m[32mimport java.awt.Dimension;[m
[32m+[m[32mimport java.awt.EventQueue;[m
[32m+[m[32mimport java.awt.GridBagConstraints;[m
[32m+[m[32mimport java.awt.GridBagLayout;[m
[32m+[m[32mimport java.awt.LayoutManager;[m
[32m+[m[32mimport java.awt.event.ActionEvent;[m
[32m+[m[32mimport java.awt.event.ActionListener;[m
[32m+[m[32mimport java.io.File;[m
[32m+[m[32mimport java.util.Enumeration;[m
[32m+[m[32mimport java.util.Stack;[m
[32m+[m
[32m+[m[32mimport javax.swing.BorderFactory;[m
[32m+[m[32mimport javax.swing.JButton;[m
[32m+[m[32mimport javax.swing.JComponent;[m
[32m+[m[32mimport javax.swing.JFileChooser;[m
[32m+[m[32mimport javax.swing.JFrame;[m
[32m+[m[32mimport javax.swing.JLabel;[m
[32m+[m[32mimport javax.swing.JPanel;[m
[32m+[m[32mimport javax.swing.JSeparator;[m
[32m+[m[32mimport javax.swing.JTextField;[m
[32m+[m[32mimport javax.swing.UIManager;[m
[32m+[m[32mimport javax.swing.tree.DefaultMutableTreeNode;[m
[32m+[m[32mimport javax.swing.tree.MutableTreeNode;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @author SHAHI[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m */[m
[32m+[m[32mpublic class SwingUiBuilder {[m
[32m+[m
[32m+[m	[32mprivate DefaultMutableTreeNode componentTreeNode = null;[m
[32m+[m	[32mprivate boolean debugEnabled = false;[m
[32m+[m
[32m+[m	[32mprivate static void example1() {[m
[32m+[m		[32m/* @formatter:off */[m
[32m+[m		[32mSwingUiBuilder.getNewInstance(false)[m
[32m+[m			[32m.createFrame(new GridBagLayout())[m
[32m+[m				[32m.addPanel(GBC.init().rowCol(0, 0).stretch(1, 1).gbc(), new GridBagLayout())[m
[32m+[m					[32m.addLabel("Label 0", GBC.init().rowCol(0, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addTextField("Label 0", GBC.init().rowCol(0, 1).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addLabel("Label 1", GBC.init().rowCol(1, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addTextField("Label 1", GBC.init().rowCol(1, 1).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.getParent()[m
[32m+[m				[32m.addRowSeparator(GBC.init().rowCol(1, 0).anchor(GridBagConstraints.WEST).fill(GridBagConstraints.BOTH).stretch(1, 0).gbc())[m
[32m+[m					[32m.getParent()[m
[32m+[m				[32m.addPanel(GBC.init().rowCol(2, 0).gbc(), new GridBagLayout())[m
[32m+[m					[32m.addLabel("Forcing this to be a long lable so it goes beyond the length of its containers standard width ", GBC.init().rowCol(0, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addTextField("Label 5", GBC.init().rowCol(0, 1).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.getParent()[m
[32m+[m				[32m.addRowSeparator(GBC.init().rowCol(3, 0).anchor(GridBagConstraints.SOUTHWEST).fill(GridBagConstraints.BOTH).stretch(1, 0).gbc())[m
[32m+[m					[32m.getParent()[m
[32m+[m				[32m.addPanel(GBC.init().rowCol(4, 0).fill(GridBagConstraints.HORIZONTAL).stretch(1, 0).gbc(), new GridBagLayout())[m
[32m+[m					[32m.addButton("Button 1", GBC.init().anchor(GridBagConstraints.EAST).stretch(1, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addButton("Button 2", GBC.init().anchor(GridBagConstraints.EAST).gbc())[m
[32m+[m						[32m.show();[m
[32m+[m		[32m/* @formatter:on */[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprivate static void example2() {[m
[32m+[m		[32m/* @formatter:off */[m
[32m+[m		[32mSwingUiBuilder.getNewInstance(false)[m
[32m+[m			[32m.createFrame(new GridBagLayout())[m
[32m+[m				[32m.addPanel(GBC.init().rowCol(0, 0).stretch(1, 1).gbc(), new GridBagLayout())[m
[32m+[m					[32m.addLabel("Label 0", GBC.init().anchor(GridBagConstraints.EAST).rowCol(0, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addTextField("Label 0", GBC.init().rowCol(0, 1).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addLabel("Label 1", GBC.init().anchor(GridBagConstraints.EAST).rowCol(1, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addTextField("Label 1", GBC.init().rowCol(1, 1).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addLabel("Big Long Label 2", GBC.init().anchor(GridBagConstraints.EAST).rowCol(2, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addTextField("Big Long Label 2", GBC.init().rowCol(2, 1).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addLabel("Workspace Path", GBC.init().anchor(GridBagConstraints.EAST).rowCol(3, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addTextField("Workspace Path", GBC.init().rowCol(3, 1).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addFolderSelectionButton("Browse", "Workspace Path", GBC.init().rowCol(3, 2).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.getParent()[m
[32m+[m				[32m.addPanel(GBC.init().rowCol(2, 0).fill(GridBagConstraints.HORIZONTAL).stretch(1, 0).gbc(), new GridBagLayout())[m
[32m+[m					[32m.addRowSeparator(GBC.init().rowCol(0, 0).widthHeight(2, 1).anchor(GridBagConstraints.SOUTHWEST).fill(GridBagConstraints.HORIZONTAL).stretch(1, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addButton("Ok", GBC.init().rowCol(1, 0).anchor(GridBagConstraints.EAST).stretch(1, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addButton("Cancel", GBC.init().rowCol(1, 1).anchor(GridBagConstraints.EAST).gbc())[m
[32m+[m						[32m.show();[m
[32m+[m		[32m/* @formatter:on */[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m
[32m+[m[32m//		example1();[m
[32m+[m		[32mexample2();[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic SwingUiBuilder(boolean debugEnabled) {[m
[32m+[m		[32mtry {[m
[32m+[m			[32mUIManager[m
[32m+[m				[32m.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");[m
[32m+[m		[32m} catch (Exception e) {[m
[32m+[m			[32mthrow new RuntimeException(e);[m
[32m+[m		[32m}[m
[32m+[m		[32mthis.debugEnabled = debugEnabled;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic SwingUiBuilder addFolderSelectionButton(String buttonName,[m
[32m+[m			[32mfinal String textFieldName, Object constraints) {[m
[32m+[m
[32m+[m		[32mfinal JPanel jPanel = (JPanel) getCurrentObject();[m
[32m+[m
[32m+[m		[32mJButton jButton = SwingComponentFactory.createButton(buttonName);[m
[32m+[m		[32mjButton.addActionListener(new ActionListener() {[m
[32m+[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic void actionPerformed(ActionEvent arg0) {[m
[32m+[m				[32mJFileChooser jFileChooser = SwingComponentFactory[m
[32m+[m						[32m.createFolderChooser();[m
[32m+[m				[32mint returnVal = jFileChooser.showOpenDialog(jPanel);[m
[32m+[m
[32m+[m				[32mif (returnVal == JFileChooser.APPROVE_OPTION) {[m
[32m+[m					[32mFile file = jFileChooser.getSelectedFile();[m
[32m+[m					[32mJTextField jTextField = (JTextField) getComponent(textFieldName + "_txt");[m
[32m+[m					[32mjTextField.setText(file.getPath());[m
[32m+[m				[32m}[m
[32m+[m				[32m// Reset the file chooser for the next time it's shown.[m
[32m+[m				[32mjFileChooser.setSelectedFile(null);[m
[32m+[m			[32m}[m
[32m+[m		[32m});[m
[32m+[m		[32mif (constraints != null) {[m
[32m+[m			[32mjPanel.add(jButton, constraints);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mjPanel.add(jButton);[m
[32m+[m		[32m}[m
[32m+[m		[32msetCurrentObject(jButton);[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic SwingUiBuilder addTextInput(String label) {[m
[32m+[m
[32m+[m		[32mJPanel jPanel = (JPanel) getCurrentObject();[m
[32m+[m		[32mJLabel jLabel = SwingComponentFactory.createLabel(label);[m
[32m+[m		[32mjPanel.add(jLabel);[m
[32m+[m		[32msetCurrentObject(jLabel);[m
[32m+[m		[32mgetParent();[m
[32m+[m		[32mJTextField jTextField = SwingComponentFactory.createTextField(label);[m
[32m+[m		[32mjPanel.add(jTextField);[m
[32m+[m		[32msetCurrentObject(jTextField);[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic SwingUiBuilder addRowSeparator(Object constraints) {[m
[32m+[m
[32m+[m		[32mJPanel jPanel = (JPanel) getCurrentObject();[m
[32m+[m		[32mJSeparator jSeparator = SwingComponentFactory.createHorizontalSeparator();[m
[32m+[m		[32mif (constraints != null) {[m
[32m+[m			[32mjPanel.add(jSeparator, constraints);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mjPanel.add(jSeparator);[m
[32m+[m		[32m}[m
[32m+[m		[32msetCurrentObject(jSeparator);[m
[32m+[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic SwingUiBuilder addTextField(String name, Object constraints) {[m
[32m+[m[41m		[m
[32m+[m		[32mJPanel jPanel = (JPanel) getCurrentObject();[m
[32m+[m		[32mJTextField jTextField = SwingComponentFactory.createTextField(name);[m
[32m+[m		[32mif (constraints != null) {[m
[32m+[m			[32mjPanel.add(jTextField, constraints);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mjPanel.add(jTextField);[m
[32m+[m		[32m}[m
[32m+[m		[32msetCurrentObject(jTextField);[m
[32m+[m[41m		[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mpublic SwingUiBuilder addButton(String name, Object constraints) {[m
[32m+[m
[32m+[m		[32mJPanel jPanel = (JPanel) getCurrentObject();[m
[32m+[m		[32mJButton jButton = SwingComponentFactory.createButton(name);[m
[32m+[m		[32mif (constraints != null) {[m
[32m+[m			[32mjPanel.add(jButton, constraints);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mjPanel.add(jButton);[m
[32m+[m		[32m}[m
[32m+[m		[32msetCurrentObject(jButton);[m
[32m+[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic SwingUiBuilder addLabel(String text, Object constraints) {[m
[32m+[m
[32m+[m		[32mJPanel jPanel = (JPanel) getCurrentObject();[m
[32m+[m		[32mJLabel jLabel = SwingComponentFactory.createLabel(text);[m
[32m+[m		[32mif (constraints != null) {[m
[32m+[m			[32mjPanel.add(jLabel, constraints);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mjPanel.add(jLabel);[m
[32m+[m		[32m}[m
[32m+[m		[32msetCurrentObject(jLabel);[m
[32m+[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic SwingUiBuilder addPanel(Object constraints,[m
[32m+[m			[32mLayoutManager layoutManager) {[m
[32m+[m
[32m+[m		[32mJPanel jPanel = SwingComponentFactory.createPanel();[m
[32m+[m		[32mif (layoutManager != null) {[m
[32m+[m			[32mjPanel.setLayout(layoutManager);[m
[32m+[m		[32m}[m
[32m+[m		[32mContainer container = (Container) getCurrentObject();[m
[32m+[m
[32m+[m		[32mif (constraints != null) {[m
[32m+[m			[32mcontainer.add(jPanel, constraints);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mcontainer.add(jPanel);[m
[32m+[m		[32m}[m
[32m+[m		[32msetCurrentObject(jPanel);[m
[32m+[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic void show() {[m
[32m+[m
[32m+[m		[32mEventQueue.invokeLater(new Runnable() {[m
[32m+[m			[32mpublic void run() {[m
[32m+[m				[32mtry {[m
[32m+[m					[32mContainer root = getRoot();[m
[32m+[m					[32mif (root instanceof JFrame) {[m
[32m+[m						[32mJFrame rootFrame = ((JFrame) root);[m
[32m+[m						[32mrootFrame.pack();[m
[32m+[m						[32mDimension dimension =  rootFrame.getPreferredSize();[m
[32m+[m						[32mrootFrame.setMinimumSize(dimension);[m
[32m+[m					[32m}[m
[32m+[m					[32mroot.setVisible(true);[m
[32m+[m				[32m} catch (Exception e) {[m
[32m+[m					[32mthrow new RuntimeException(e);[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m});[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic SwingUiBuilder createFrame(LayoutManager layoutManager) {[m
[32m+[m
[32m+[m		[32mJFrame jframe = SwingComponentFactory.createFrame();[m
[32m+[m		[32mjframe.setLayout(new BorderLayout());[m
[32m+[m		[32mjframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);[m
[32m+[m		[32mJPanel jPanel = SwingComponentFactory.createPanel();[m
[32m+[m		[32mjPanel.setLayout(layoutManager);[m
[32m+[m		[32mjframe.getContentPane().add(jPanel, BorderLayout.CENTER);[m
[32m+[m		[32msetRoot(jframe);[m
[32m+[m		[32msetCurrentObject(jPanel);[m
[32m+[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic SwingUiBuilder getParent() {[m
[32m+[m		[32mcomponentTreeNode = (DefaultMutableTreeNode) componentTreeNode[m
[32m+[m				[32m.getParent();[m
[32m+[m		[32mreturn this;[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprivate Component getComponent(String componentName) {[m
[32m+[m		[32mDefaultMutableTreeNode node = find([m
[32m+[m				[32m(DefaultMutableTreeNode) getCurrentNode().getRoot(),[m
[32m+[m				[32mcomponentName);[m
[32m+[m		[32mreturn (Component) node.getUserObject();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate Component getCurrentObject() {[m
[32m+[m		[32mreturn (Component) componentTreeNode.getUserObject();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic DefaultMutableTreeNode getCurrentNode() {[m
[32m+[m		[32mreturn componentTreeNode;[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate void setCurrentObject(Component component) {[m
[32m+[m
[32m+[m		[32mif (componentTreeNode != null) {[m
[32m+[m			[32mMutableTreeNode treeNode = new DefaultMutableTreeNode(component);[m
[32m+[m			[32mcomponentTreeNode.add(treeNode);[m
[32m+[m			[32mcomponentTreeNode = (DefaultMutableTreeNode) treeNode;[m
[32m+[m		[32m} else {[m
[32m+[m			[32mcomponentTreeNode = new DefaultMutableTreeNode(component, true);[m
[32m+[m		[32m}[m
[32m+[m		[32mcheckDebugEnabled(component);[m
[32m+[m		[32mprint(getName(component));[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprivate void checkDebugEnabled(Component component) {[m
[32m+[m		[32mif (this.debugEnabled) {[m
[32m+[m			[32mif (component instanceof JComponent) {[m
[32m+[m				[32m((JComponent) component).setBorder(BorderFactory[m
[32m+[m						[32m.createLineBorder(Color.RED));[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate void setRoot(Container container) {[m
[32m+[m
[32m+[m		[32msetCurrentObject(container);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic Container getRoot() {[m
[32m+[m		[32mprettyPrintTree();[m
[32m+[m		[32mDefaultMutableTreeNode node = (DefaultMutableTreeNode) this.componentTreeNode[m
[32m+[m				[32m.getRoot();[m
[32m+[m		[32mreturn (Container) node.getUserObject();[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mpublic static SwingUiBuilder getNewInstance(boolean debugEnabled) {[m
[32m+[m
[32m+[m		[32mreturn new SwingUiBuilder(debugEnabled);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate String getName(Component component) {[m
[32m+[m
[32m+[m		[32mreturn String.format("%s (%s)", component.getClass().getSimpleName(),[m
[32m+[m				[32mcomponent.getName());[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate void print(String output) {[m
[32m+[m
[32m+[m		[32mSystem.out.printf("%s - %s\n", this.getClass().getSimpleName(), output);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mprivate void prettyPrintTree() {[m
[32m+[m
[32m+[m		[32mif (componentTreeNode != null) {[m
[32m+[m			[32mDefaultMutableTreeNode treeRoot = (DefaultMutableTreeNode) componentTreeNode[m
[32m+[m					[32m.getRoot();[m
[32m+[m			[32mStringBuilder stringBuilder = new StringBuilder();[m
[32m+[m			[32mstringBuilder.append("\n");[m
[32m+[m			[32mprettyPrintTree(treeRoot, stringBuilder);[m
[32m+[m			[32mprint(stringBuilder.toString());[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m@SuppressWarnings("unchecked")[m
[32m+[m	[32mprivate void prettyPrintTree(DefaultMutableTreeNode node,[m
[32m+[m			[32mStringBuilder stringBuilder) {[m
[32m+[m
[32m+[m		[32mstringBuilder.append(getName((Component) node.getUserObject()) + "\n");[m
[32m+[m		[32mEnumeration<DefaultMutableTreeNode> children = node.children();[m
[32m+[m		[32mwhile (children.hasMoreElements()) {[m
[32m+[m			[32mnode = (DefaultMutableTreeNode) children.nextElement();[m
[32m+[m			[32mfor (int i = 0; i < node.getLevel(); i++) {[m
[32m+[m				[32mstringBuilder.append("    ");[m
[32m+[m			[32m}[m
[32m+[m			[32mprettyPrintTree(node, stringBuilder);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprotected DefaultMutableTreeNode find(DefaultMutableTreeNode node,[m
[32m+[m			[32mString userObjectName) {[m
[32m+[m		[32mStack<DefaultMutableTreeNode> stack = new Stack<DefaultMutableTreeNode>();[m
[32m+[m		[32mstack.push(node);[m
[32m+[m
[32m+[m		[32mDefaultMutableTreeNode temp = null;[m
[32m+[m		[32m// contextSet.add(rootNode.getType());[m
[32m+[m		[32mfound: {[m
[32m+[m			[32mwhile (!stack.isEmpty()) {[m
[32m+[m				[32mDefaultMutableTreeNode r = stack.pop();[m
[32m+[m				[32mfor (int i = 0; i < r.getChildCount(); i++) {[m
[32m+[m					[32mtemp = (DefaultMutableTreeNode) r.getChildAt(i);[m
[32m+[m					[32mif (userObjectName[m
[32m+[m							[32m.equals(((Component) temp.getUserObject())[m
[32m+[m									[32m.getName())) {[m
[32m+[m						[32mbreak found;[m
[32m+[m					[32m}[m
[32m+[m					[32mstack.push(temp);[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn temp;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/SwingUiBuilder/src/test/java/com/imranamans/swinguibuilder/SwingUiBuilderTest.java b/SwingUiBuilder/src/test/java/com/imranamans/swinguibuilder/SwingUiBuilderTest.java[m
[1mindex 7bdbd6f..f787f95 100644[m
[1m--- a/SwingUiBuilder/src/test/java/com/imranamans/swinguibuilder/SwingUiBuilderTest.java[m
[1m+++ b/SwingUiBuilder/src/test/java/com/imranamans/swinguibuilder/SwingUiBuilderTest.java[m
[36m@@ -1,35 +1,35 @@[m
[31m-package com.imranamans.swinguibuilder;[m
[31m-[m
[31m-import static org.junit.Assert.assertThat;[m
[31m-[m
[31m-import java.awt.Component;[m
[31m-import java.awt.GridBagConstraints;[m
[31m-import java.awt.GridBagLayout;[m
[31m-[m
[31m-import javax.swing.tree.DefaultMutableTreeNode;[m
[31m-[m
[31m-import org.hamcrest.CoreMatchers;[m
[31m-import org.junit.Test;[m
[31m-[m
[31m-public class SwingUiBuilderTest {[m
[31m-[m
[31m-	@Test[m
[31m-	public void testFind2() {[m
[31m-		[m
[31m-		/* @formatter:off */[m
[31m-		DefaultMutableTreeNode componentTreeNode = SwingUiBuilder.getNewInstance(false)[m
[31m-			.createFrame(new GridBagLayout())[m
[31m-				.addPanel(GBC.init().rowCol(0, 0).stretch(1, 1).gbc(), new GridBagLayout())[m
[31m-					.addLabel("Workspace Path", GBC.init().anchor(GridBagConstraints.EAST).rowCol(3, 0).gbc())[m
[31m-						.getParent()[m
[31m-					.addTextField("Workspace Path", GBC.init().rowCol(3, 1).gbc())[m
[31m-						.getParent()[m
[31m-					.addFolderSelectionButton("Browse", "Workspace Path", GBC.init().rowCol(3, 2).gbc())[m
[31m-						.getCurrentNode();[m
[31m-		DefaultMutableTreeNode actual = SwingUiBuilder.getNewInstance(false).find((DefaultMutableTreeNode) componentTreeNode.getRoot(), "Workspace Path_txt");[m
[31m-		[m
[31m-		assertThat(((Component)actual.getUserObject()).getName(), CoreMatchers.is("Workspace Path_txt"));[m
[31m-		/* @formatter:on */[m
[31m-	}[m
[31m-[m
[31m-}[m
[32m+[m[32mpackage com.imranamans.swinguibuilder;[m
[32m+[m
[32m+[m[32mimport static org.junit.Assert.assertThat;[m
[32m+[m
[32m+[m[32mimport java.awt.Component;[m
[32m+[m[32mimport java.awt.GridBagConstraints;[m
[32m+[m[32mimport java.awt.GridBagLayout;[m
[32m+[m
[32m+[m[32mimport javax.swing.tree.DefaultMutableTreeNode;[m
[32m+[m
[32m+[m[32mimport org.hamcrest.CoreMatchers;[m
[32m+[m[32mimport org.junit.Test;[m
[32m+[m
[32m+[m[32mpublic class SwingUiBuilderTest {[m
[32m+[m
[32m+[m	[32m@Test[m
[32m+[m	[32mpublic void testFind2() {[m
[32m+[m[41m		[m
[32m+[m		[32m/* @formatter:off */[m
[32m+[m		[32mDefaultMutableTreeNode componentTreeNode = SwingUiBuilder.getNewInstance(false)[m
[32m+[m			[32m.createFrame(new GridBagLayout())[m
[32m+[m				[32m.addPanel(GBC.init().rowCol(0, 0).stretch(1, 1).gbc(), new GridBagLayout())[m
[32m+[m					[32m.addLabel("Workspace Path", GBC.init().anchor(GridBagConstraints.EAST).rowCol(3, 0).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addTextField("Workspace Path", GBC.init().rowCol(3, 1).gbc())[m
[32m+[m						[32m.getParent()[m
[32m+[m					[32m.addFolderSelectionButton("Browse", "Workspace Path", GBC.init().rowCol(3, 2).gbc())[m
[32m+[m						[32m.getCurrentNode();[m
[32m+[m		[32mDefaultMutableTreeNode actual = SwingUiBuilder.getNewInstance(false).find((DefaultMutableTreeNode) componentTreeNode.getRoot(), "Workspace Path_txt");[m
[32m+[m[41m		[m
[32m+[m		[32massertThat(((Component)actual.getUserObject()).getName(), CoreMatchers.is("Workspace Path_txt"));[m
[32m+[m		[32m/* @formatter:on */[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
